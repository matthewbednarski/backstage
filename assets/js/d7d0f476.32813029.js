/*! For license information please see d7d0f476.32813029.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[501833],{849009:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>d,toc:()=>i});var r=t(474848),n=t(28453);const c={id:"backend-tasks.plugintaskscheduler.getscheduledtasks",title:"PluginTaskScheduler.getScheduledTasks()",description:"API reference for PluginTaskScheduler.getScheduledTasks()"},a=void 0,d={id:"reference/backend-tasks.plugintaskscheduler.getscheduledtasks",title:"PluginTaskScheduler.getScheduledTasks()",description:"API reference for PluginTaskScheduler.getScheduledTasks()",source:"@site/versioned_docs/version-stable/reference/backend-tasks.plugintaskscheduler.getscheduledtasks.md",sourceDirName:"reference",slug:"/reference/backend-tasks.plugintaskscheduler.getscheduledtasks",permalink:"/docs/reference/backend-tasks.plugintaskscheduler.getscheduledtasks",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/reference/backend-tasks.plugintaskscheduler.getscheduledtasks.md",tags:[],version:"stable",frontMatter:{id:"backend-tasks.plugintaskscheduler.getscheduledtasks",title:"PluginTaskScheduler.getScheduledTasks()",description:"API reference for PluginTaskScheduler.getScheduledTasks()"}},l={},i=[{value:"Remarks",id:"remarks",level:2}];function o(e){const s={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/docs/reference/",children:"Home"})," > ",(0,r.jsx)(s.a,{href:"/docs/reference/backend-tasks",children:(0,r.jsx)(s.code,{children:"@backstage/backend-tasks"})})," > ",(0,r.jsx)(s.a,{href:"/docs/reference/backend-tasks.plugintaskscheduler",children:(0,r.jsx)(s.code,{children:"PluginTaskScheduler"})})," > ",(0,r.jsx)(s.a,{href:"/docs/reference/backend-tasks.plugintaskscheduler.getscheduledtasks",children:(0,r.jsx)(s.code,{children:"getScheduledTasks"})})]}),"\n",(0,r.jsx)(s.p,{children:"Returns all scheduled tasks registered to this scheduler."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Signature:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"getScheduledTasks(): Promise<TaskDescriptor[]>;\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(s.p,{children:["Promise<",(0,r.jsx)(s.a,{href:"/docs/reference/backend-tasks.taskdescriptor",children:"TaskDescriptor"}),"[]>"]}),"\n",(0,r.jsx)(s.p,{children:"Scheduled tasks"}),"\n",(0,r.jsx)(s.h2,{id:"remarks",children:"Remarks"}),"\n",(0,r.jsx)(s.p,{children:"This method is useful for triggering tasks manually using the triggerTask functionality. Note that the returned tasks contain only tasks that have been initialized in this instance of the scheduler."})]})}function u(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},221020:(e,s,t)=>{var r=t(296540),n=Symbol.for("react.element"),c=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,d=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function i(e,s,t){var r,c={},i=null,o=null;for(r in void 0!==t&&(i=""+t),void 0!==s.key&&(i=""+s.key),void 0!==s.ref&&(o=s.ref),s)a.call(s,r)&&!l.hasOwnProperty(r)&&(c[r]=s[r]);if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===c[r]&&(c[r]=s[r]);return{$$typeof:n,type:e,key:i,ref:o,props:c,_owner:d.current}}s.Fragment=c,s.jsx=i,s.jsxs=i},474848:(e,s,t)=>{e.exports=t(221020)},28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>d});var r=t(296540);const n={},c=r.createContext(n);function a(e){const s=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(c.Provider,{value:s},e.children)}}}]);